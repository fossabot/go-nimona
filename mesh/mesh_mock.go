// Code generated by mockery v1.0.0. DO NOT EDIT.
package mesh

import context "context"
import mock "github.com/stretchr/testify/mock"
import net "net"

// MockMesh is an autogenerated mock type for the Mesh type
type MockMesh struct {
	mock.Mock
}

// Dial provides a mock function with given fields: ctx, peerID, protocol
func (_m *MockMesh) Dial(ctx context.Context, peerID string, protocol ...string) (net.Conn, error) {
	_va := make([]interface{}, len(protocol))
	for _i := range protocol {
		_va[_i] = protocol[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, peerID)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 net.Conn
	if rf, ok := ret.Get(0).(func(context.Context, string, ...string) net.Conn); ok {
		r0 = rf(ctx, peerID, protocol...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Conn)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, ...string) error); ok {
		r1 = rf(ctx, peerID, protocol...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
