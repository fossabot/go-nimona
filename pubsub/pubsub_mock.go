// Code generated by mockery v1.0.0
package pubsub

import mock "github.com/stretchr/testify/mock"

// MockPubSub is an autogenerated mock type for the PubSub type
type MockPubSub struct {
	mock.Mock
}

// Publish provides a mock function with given fields: msg, topic
func (_m *MockPubSub) Publish(msg interface{}, topic string) error {
	ret := _m.Called(msg, topic)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, string) error); ok {
		r0 = rf(msg, topic)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: topic
func (_m *MockPubSub) Subscribe(topic string) (chan interface{}, error) {
	ret := _m.Called(topic)

	var r0 chan interface{}
	if rf, ok := ret.Get(0).(func(string) chan interface{}); ok {
		r0 = rf(topic)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(topic)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unsubscribe provides a mock function with given fields: _a0
func (_m *MockPubSub) Unsubscribe(_a0 chan interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(chan interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
